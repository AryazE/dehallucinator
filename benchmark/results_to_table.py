from pathlib import Path
import argparse
import json

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--project', type=str, required=True, help='Name of the project')
    parser.add_argument('--results', type=str, required=True, help='Path to results directory generated by process_results.py')
    args = parser.parse_args()
    here = Path(__file__).parent.resolve()
    res_dir = Path(args.results).resolve()
    with open(res_dir/'complete.json', 'r') as f:
        results = json.load(f)
    if not (here/'table.md').exists():
        with open(here/'table.md', 'w') as f:
            f.write('| Project | ID | Ground Truth | Baseline | Iteration 1 | Iteration 2 | Iteration 3 |\n')
            f.write('| --- | --- | --- | --- | --- | --- | --- |\n')
    for mode, sub_res in results.items():
        if mode.startswith('baseline'):
            continue
        for id, res in sub_res.items():
            if id == 0:
                continue
            with open(res_dir/f'gt-{id}.md') as f:
                gt = f.read().split('\nground truth:\n```python\n')[1].split('\n```')[0].replace('\n', ' ')
            completions = []
            with open(res_dir/f'{mode}-{id}.md') as f:
                    content = f.read()
            for k in range(4):
                completions.append(content.split(f'\ncompletion {k+1}:\n```python\n')[1].split('\n```')[0].replace('\n', ' '))
            with open(here/'table.md', 'a') as f:
                f.write(f'| {args.project} | {id} | {gt} | {completions[0]} | {completions[1]} | {completions[2]} | {completions[3]} |\n')
                f.write('| --- | --- | --- | --- | --- | --- | --- |\n')