import argparse
from pathlib import Path
import json

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--results', type=str, required=True, help='Path to results generated by process_results.py')
    args = parser.parse_args()

    with open(Path(args.results)/'complete.json', 'r') as f:
        results = json.load(f)
    res_dir = Path(args.results).resolve()
    baseline = ''
    for mode in results.keys():
        if mode.startswith('baseline'):
            baseline = mode
            break
    N = 0
    K = 5
    to_exact = []
    to_api = []
    for mode, sub_res in results.items():
        if mode.startswith('baseline'):
            baseline = mode
            continue
        N = max(N, len(sub_res))
        for id, res in sub_res.items():
            if id == 0:
                continue
            with open(res_dir/f'gt-{id}.md') as f:
                gt = f.read().split('\nground truth:\n```python\n')[1].split('\n```')[0].replace('\n', ' ')
            completions = []
            with open(res_dir/f'{mode}-{id}.md') as f:
                    content = f.read()
            for k in range(len(res)):
                completions.append(content.split(f'\ncompletion {k}:\n```python\n')[1].split('\n```')[0].replace('\n', ' '))
            if gt != completions[0] and gt in completions[1:]:
                to_exact.append(id)
            api = [float(x[1]) for x in res]
            if api[0] < max(api[1:]):
                to_api.append(id)
    with open(Path(args.results)/'corrected.txt', 'w') as f:
        f.write(f'{len(to_exact)} {len(to_api)}\n' + ' '.join([str(x) for x in to_exact]) + '\n' + ' '.join([str(x) for x in to_api]))
